EJEMPLO DE EJERCICIO 1
Codificar un programa que permita la gestión de ficheros con información bidimensional de datos tipo unsigned char.

Para ello se dispone de dos tipos de ficheros binarios de datos:

Tipo 1
De este tipo hay un solo fichero.
El contenido de este fichero es el listado de ficheros de tipo 2 a gestionar.
Los de tipo 2 tienen el siguiente formato:
Primer elemento del fichero: Un dato de tipo int que almacena el número de elementos.
A partir del segundo elemento: Cada elemento del fichero contiene la siguiente información:
nomfich: Cadena de caracteres de máximo 20 elementos.
codigo: ?????
Tipo 2
De este tipo hay tantos ficheros como se deseen gestionar.
Cada fichero contiene información bidimensional de datos de tipo unsigned char.
Formato del fichero tipo 2:

a) El primer elemento del fichero es una estructura con la siguiente información:

filas: Dato de tipo int que indica el número de filas.
columnas: Dato de tipo int que indica el número de columnas.
codigo: Cadena de caracteres de máximo 12 elementos, que contiene el código de acceso al fichero.
b) A partir del segundo elemento, cada elemento del fichero almacena datos de tipo unsigned char.

Esta información está almacenada por filas.
El programa se ejecutará rápidamente en torno a un menú con las siguientes opciones:

Salir del programa.
Insertar fichero.
Eliminar fichero.
Comprobar listado.
EJEMPLO DE EJERCICIO 2
Opción 1: Insertar fichero
Se introduce el nombre y el código de acceso de un fichero de datos de tipo unsigned char en el fichero listado.dat.

Se pedirá por teclado el nombre del fichero a insertar en el listado.
Si el fichero existe, se solicitará la introducción por teclado del código de acceso al fichero.
Si el código de acceso es correcto y el fichero no está en el listado, su información será almacenada en el fichero listado.dat.
En caso de que no pueda ser insertado en el listado, se mostrará en pantalla la razón.
Nota del profesor: Para esto se debe realizar volcados, búsquedas binarias, y otros procesos adicionales.

Opción 2: Eliminar fichero
Elimina del fichero listado.dat el elemento que contiene el nombre y el código de acceso de un fichero de datos de tipo unsigned char.

Se pedirá por teclado el nombre del fichero a eliminar del listado.
Si el fichero está en el listado, se solicitará el código de acceso al fichero.
Si el código de acceso coincide con el que figura en el listado, el elemento correspondiente será eliminado.
En caso de que no pueda ser eliminado, se visualizará en pantalla la razón.
Opción 3: Comprobar listado
Comprueba que todos los ficheros del listado existen y que sus códigos de acceso coinciden con los que figuran en la cabecera de los ficheros de tipo 2.

Para todo fichero que no exista o cuyo código de acceso no sea el mismo que el registrado, el elemento correspondiente será eliminado del listado.
La razón de su eliminación se mostrará en pantalla.
EJEMPLO DE EJERCICIO 3
Dado un fichero que contiene el censo de la población bilbaína, se pide escribir un programa que cree un fichero que contenga la información referente a las personas con más de 60 años o que los cumplan dentro del año actual.

La información no deberá borrarse del fichero original.
El programa deberá calcular el porcentaje que representan estas personas respecto al total del censo.
Formato del fichero del censo:
Cada registro contiene los siguientes datos:

nombre: Nombre del ciudadano.
dos apellidos: Apellidos del ciudadano.
año de nacimiento: Año en que nació el ciudadano.
direccion: Dirección del ciudadano.
Funciones del programa:

programa cReaCenos60: Programa principal.
creaFichero2(nomFich1, nomFich2): Crea un nuevo fichero con los datos filtrados.
visualizaFichero(nomFich): Muestra el contenido de un fichero.
visualizaFicha(ficha): Muestra los datos de una ficha individual.
